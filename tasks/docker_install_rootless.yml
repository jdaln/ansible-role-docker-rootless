---
- name: Get Docker version
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.command:
    cmd: "{{ docker_user_info.home }}/bin/docker version"
  register: rootless_docker_version
  changed_when: false
  failed_when: false

- name: Create Docker user bin directory
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.file:
    path: "{{ docker_user_info.home }}/bin"
    state: directory
    mode: "0700"

- name: Create user systemd .config directory
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.file:
    path: "{{ docker_user_info.home }}/.config/systemd/user"
    state: directory
    mode: "0700"

- name: Create user Docker .config directory
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.file:
    path: "{{ docker_user_info.home }}/.config/docker"
    state: directory
    mode: "0700"

- name: Install rootless Docker
  when: docker_release not in rootless_docker_version.stdout
  block:
    - name: Download Docker archive {{ docker_release }}
      become: true
      become_user: "{{ docker_user }}"
      ansible.builtin.get_url:
        url: "{{ docker_url }}/docker-{{ docker_release }}.tgz"
        dest: "{{ docker_user_info.home }}/docker-{{ docker_release }}.tgz"
        checksum: "sha256:{{ shasums['docker_release'][docker_arch] }}"
        owner: "{{ docker_user }}"
        mode: "0644"

    - name: Download docker-rootless-extras archive {{ docker_release }}
      become: true
      become_user: "{{ docker_user }}"
      ansible.builtin.get_url:
        url: "{{ docker_url }}/docker-rootless-extras-{{ docker_release }}.tgz"
        dest: "{{ docker_user_info.home }}/docker-rootless-extras-{{ docker_release }}.tgz"
        checksum: "sha256:{{ shasums['docker_rootless_release'][docker_arch] }}"
        owner: "{{ docker_user }}"
        mode: "0644"

    - name: Extract Docker archive into Docker user bin directory
      become: true
      become_user: "{{ docker_user }}"
      ansible.builtin.unarchive:
        src: "{{ docker_user_info.home }}/docker-{{ docker_release }}.tgz"
        dest: "{{ docker_user_info.home }}/bin"
        extra_opts:
          - --strip-components=1
        remote_src: true
      notify:
        - Restart rootless docker

    - name: Extract docker-rootless-extras into Docker user bin directory
      become: true
      become_user: "{{ docker_user }}"
      ansible.builtin.unarchive:
        src: "{{ docker_user_info.home }}/docker-rootless-extras-{{ docker_release }}.tgz"
        dest: "{{ docker_user_info.home }}/bin"
        extra_opts:
          - --strip-components=1
        remote_src: true

- name: Add Docker systemd service
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.template:
    src: "{{ docker_rootless_service_template }}"
    dest: "{{ docker_user_info.home }}/.config/systemd/user/docker.service"
    backup: true
    mode: "0600"

- name: Add rootless Docker configuration file
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.template:
    src: "{{ docker_daemon_json_template }}"
    dest: "{{ docker_user_info.home }}/.config/docker/daemon.json"
    backup: true
    mode: "0644"
